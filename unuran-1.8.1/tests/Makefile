# Makefile.in generated by automake 1.16.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/unuran
pkgincludedir = $(includedir)/unuran
pkglibdir = $(libdir)/unuran
pkglibexecdir = $(libexecdir)/unuran
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
check_PROGRAMS = t_x_gen$(EXEEXT) t_unur_tests$(EXEEXT) \
	t_unur_error$(EXEEXT) t_urng$(EXEEXT) t_distr$(EXEEXT) \
	t_distr_cemp$(EXEEXT) t_distr_cont$(EXEEXT) \
	t_distr_corder$(EXEEXT) t_distr_cvec$(EXEEXT) \
	t_distr_condi$(EXEEXT) t_distr_cvemp$(EXEEXT) \
	t_distr_cxtrans$(EXEEXT) t_distr_discr$(EXEEXT) \
	t_distr_matr$(EXEEXT) t_auto$(EXEEXT) t_arou$(EXEEXT) \
	t_ars$(EXEEXT) t_cext$(EXEEXT) t_cstd$(EXEEXT) t_dari$(EXEEXT) \
	t_dau$(EXEEXT) t_dext$(EXEEXT) t_dgt$(EXEEXT) t_dsrou$(EXEEXT) \
	t_dss$(EXEEXT) t_dstd$(EXEEXT) t_empk$(EXEEXT) t_empl$(EXEEXT) \
	t_gibbs$(EXEEXT) t_hinv$(EXEEXT) t_hist$(EXEEXT) \
	t_hitro$(EXEEXT) t_hrb$(EXEEXT) t_hrd$(EXEEXT) t_hri$(EXEEXT) \
	t_itdr$(EXEEXT) t_mcorr$(EXEEXT) t_mixt$(EXEEXT) \
	t_mvstd$(EXEEXT) t_mvtdr$(EXEEXT) t_ninv$(EXEEXT) \
	t_norta$(EXEEXT) t_nrou$(EXEEXT) t_pinv$(EXEEXT) \
	t_srou$(EXEEXT) t_ssr$(EXEEXT) t_tabl$(EXEEXT) t_tdr$(EXEEXT) \
	t_tdr_gw$(EXEEXT) t_tdr_ps$(EXEEXT) t_tdr_ia$(EXEEXT) \
	t_unif$(EXEEXT) t_utdr$(EXEEXT) t_vempk$(EXEEXT) \
	t_vnrou$(EXEEXT) t_stringparser$(EXEEXT) t_info$(EXEEXT) \
	t_util_matrix$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2)
test_StdDistr_DEPENDENCIES =  \
	libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
test_functionparser_DEPENDENCIES =  \
	libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
	$(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = t_deprecated_vmt$(EXEEXT) \
#	t_deprecated_tdrgw$(EXEEXT)
#am__EXEEXT_2 = test_StdDistr$(EXEEXT) \
#	test_functionparser$(EXEEXT)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libtestroutines_la_LIBADD =
am_libtestroutines_la_OBJECTS = testroutines.lo testcounter.lo
libtestroutines_la_OBJECTS = $(am_libtestroutines_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
t_arou_SOURCES = t_arou.c
t_arou_OBJECTS = t_arou.$(OBJEXT)
t_arou_LDADD = $(LDADD)
t_arou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_ars_SOURCES = t_ars.c
t_ars_OBJECTS = t_ars.$(OBJEXT)
t_ars_LDADD = $(LDADD)
t_ars_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_auto_SOURCES = t_auto.c
t_auto_OBJECTS = t_auto.$(OBJEXT)
t_auto_LDADD = $(LDADD)
t_auto_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_cext_SOURCES = t_cext.c
t_cext_OBJECTS = t_cext.$(OBJEXT)
t_cext_LDADD = $(LDADD)
t_cext_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_cstd_SOURCES = t_cstd.c
t_cstd_OBJECTS = t_cstd.$(OBJEXT)
t_cstd_LDADD = $(LDADD)
t_cstd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dari_SOURCES = t_dari.c
t_dari_OBJECTS = t_dari.$(OBJEXT)
t_dari_LDADD = $(LDADD)
t_dari_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dau_SOURCES = t_dau.c
t_dau_OBJECTS = t_dau.$(OBJEXT)
t_dau_LDADD = $(LDADD)
t_dau_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_deprecated_tdrgw_SOURCES = t_deprecated_tdrgw.c
t_deprecated_tdrgw_OBJECTS = t_deprecated_tdrgw.$(OBJEXT)
t_deprecated_tdrgw_LDADD = $(LDADD)
t_deprecated_tdrgw_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_deprecated_vmt_SOURCES = t_deprecated_vmt.c
t_deprecated_vmt_OBJECTS = t_deprecated_vmt.$(OBJEXT)
t_deprecated_vmt_LDADD = $(LDADD)
t_deprecated_vmt_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dext_SOURCES = t_dext.c
t_dext_OBJECTS = t_dext.$(OBJEXT)
t_dext_LDADD = $(LDADD)
t_dext_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dgt_SOURCES = t_dgt.c
t_dgt_OBJECTS = t_dgt.$(OBJEXT)
t_dgt_LDADD = $(LDADD)
t_dgt_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_SOURCES = t_distr.c
t_distr_OBJECTS = t_distr.$(OBJEXT)
t_distr_LDADD = $(LDADD)
t_distr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cemp_SOURCES = t_distr_cemp.c
t_distr_cemp_OBJECTS = t_distr_cemp.$(OBJEXT)
t_distr_cemp_LDADD = $(LDADD)
t_distr_cemp_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_condi_SOURCES = t_distr_condi.c
t_distr_condi_OBJECTS = t_distr_condi.$(OBJEXT)
t_distr_condi_LDADD = $(LDADD)
t_distr_condi_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cont_SOURCES = t_distr_cont.c
t_distr_cont_OBJECTS = t_distr_cont.$(OBJEXT)
t_distr_cont_LDADD = $(LDADD)
t_distr_cont_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_corder_SOURCES = t_distr_corder.c
t_distr_corder_OBJECTS = t_distr_corder.$(OBJEXT)
t_distr_corder_LDADD = $(LDADD)
t_distr_corder_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cvec_SOURCES = t_distr_cvec.c
t_distr_cvec_OBJECTS = t_distr_cvec.$(OBJEXT)
t_distr_cvec_LDADD = $(LDADD)
t_distr_cvec_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cvemp_SOURCES = t_distr_cvemp.c
t_distr_cvemp_OBJECTS = t_distr_cvemp.$(OBJEXT)
t_distr_cvemp_LDADD = $(LDADD)
t_distr_cvemp_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_cxtrans_SOURCES = t_distr_cxtrans.c
t_distr_cxtrans_OBJECTS = t_distr_cxtrans.$(OBJEXT)
t_distr_cxtrans_LDADD = $(LDADD)
t_distr_cxtrans_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_discr_SOURCES = t_distr_discr.c
t_distr_discr_OBJECTS = t_distr_discr.$(OBJEXT)
t_distr_discr_LDADD = $(LDADD)
t_distr_discr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_distr_matr_SOURCES = t_distr_matr.c
t_distr_matr_OBJECTS = t_distr_matr.$(OBJEXT)
t_distr_matr_LDADD = $(LDADD)
t_distr_matr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dsrou_SOURCES = t_dsrou.c
t_dsrou_OBJECTS = t_dsrou.$(OBJEXT)
t_dsrou_LDADD = $(LDADD)
t_dsrou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dss_SOURCES = t_dss.c
t_dss_OBJECTS = t_dss.$(OBJEXT)
t_dss_LDADD = $(LDADD)
t_dss_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_dstd_SOURCES = t_dstd.c
t_dstd_OBJECTS = t_dstd.$(OBJEXT)
t_dstd_LDADD = $(LDADD)
t_dstd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_empk_SOURCES = t_empk.c
t_empk_OBJECTS = t_empk.$(OBJEXT)
t_empk_LDADD = $(LDADD)
t_empk_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_empl_SOURCES = t_empl.c
t_empl_OBJECTS = t_empl.$(OBJEXT)
t_empl_LDADD = $(LDADD)
t_empl_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_gibbs_SOURCES = t_gibbs.c
t_gibbs_OBJECTS = t_gibbs.$(OBJEXT)
t_gibbs_LDADD = $(LDADD)
t_gibbs_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hinv_SOURCES = t_hinv.c
t_hinv_OBJECTS = t_hinv.$(OBJEXT)
t_hinv_LDADD = $(LDADD)
t_hinv_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hist_SOURCES = t_hist.c
t_hist_OBJECTS = t_hist.$(OBJEXT)
t_hist_LDADD = $(LDADD)
t_hist_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hitro_SOURCES = t_hitro.c
t_hitro_OBJECTS = t_hitro.$(OBJEXT)
t_hitro_LDADD = $(LDADD)
t_hitro_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hrb_SOURCES = t_hrb.c
t_hrb_OBJECTS = t_hrb.$(OBJEXT)
t_hrb_LDADD = $(LDADD)
t_hrb_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hrd_SOURCES = t_hrd.c
t_hrd_OBJECTS = t_hrd.$(OBJEXT)
t_hrd_LDADD = $(LDADD)
t_hrd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_hri_SOURCES = t_hri.c
t_hri_OBJECTS = t_hri.$(OBJEXT)
t_hri_LDADD = $(LDADD)
t_hri_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_info_SOURCES = t_info.c
t_info_OBJECTS = t_info.$(OBJEXT)
t_info_LDADD = $(LDADD)
t_info_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_itdr_SOURCES = t_itdr.c
t_itdr_OBJECTS = t_itdr.$(OBJEXT)
t_itdr_LDADD = $(LDADD)
t_itdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mcorr_SOURCES = t_mcorr.c
t_mcorr_OBJECTS = t_mcorr.$(OBJEXT)
t_mcorr_LDADD = $(LDADD)
t_mcorr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mixt_SOURCES = t_mixt.c
t_mixt_OBJECTS = t_mixt.$(OBJEXT)
t_mixt_LDADD = $(LDADD)
t_mixt_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mvstd_SOURCES = t_mvstd.c
t_mvstd_OBJECTS = t_mvstd.$(OBJEXT)
t_mvstd_LDADD = $(LDADD)
t_mvstd_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_mvtdr_SOURCES = t_mvtdr.c
t_mvtdr_OBJECTS = t_mvtdr.$(OBJEXT)
t_mvtdr_LDADD = $(LDADD)
t_mvtdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_ninv_SOURCES = t_ninv.c
t_ninv_OBJECTS = t_ninv.$(OBJEXT)
t_ninv_LDADD = $(LDADD)
t_ninv_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_norta_SOURCES = t_norta.c
t_norta_OBJECTS = t_norta.$(OBJEXT)
t_norta_LDADD = $(LDADD)
t_norta_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_nrou_SOURCES = t_nrou.c
t_nrou_OBJECTS = t_nrou.$(OBJEXT)
t_nrou_LDADD = $(LDADD)
t_nrou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_pinv_SOURCES = t_pinv.c
t_pinv_OBJECTS = t_pinv.$(OBJEXT)
t_pinv_LDADD = $(LDADD)
t_pinv_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_srou_SOURCES = t_srou.c
t_srou_OBJECTS = t_srou.$(OBJEXT)
t_srou_LDADD = $(LDADD)
t_srou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_ssr_SOURCES = t_ssr.c
t_ssr_OBJECTS = t_ssr.$(OBJEXT)
t_ssr_LDADD = $(LDADD)
t_ssr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_stringparser_SOURCES = t_stringparser.c
t_stringparser_OBJECTS = t_stringparser.$(OBJEXT)
t_stringparser_LDADD = $(LDADD)
t_stringparser_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tabl_SOURCES = t_tabl.c
t_tabl_OBJECTS = t_tabl.$(OBJEXT)
t_tabl_LDADD = $(LDADD)
t_tabl_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_SOURCES = t_tdr.c
t_tdr_OBJECTS = t_tdr.$(OBJEXT)
t_tdr_LDADD = $(LDADD)
t_tdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_gw_SOURCES = t_tdr_gw.c
t_tdr_gw_OBJECTS = t_tdr_gw.$(OBJEXT)
t_tdr_gw_LDADD = $(LDADD)
t_tdr_gw_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_ia_SOURCES = t_tdr_ia.c
t_tdr_ia_OBJECTS = t_tdr_ia.$(OBJEXT)
t_tdr_ia_LDADD = $(LDADD)
t_tdr_ia_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_tdr_ps_SOURCES = t_tdr_ps.c
t_tdr_ps_OBJECTS = t_tdr_ps.$(OBJEXT)
t_tdr_ps_LDADD = $(LDADD)
t_tdr_ps_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_unif_SOURCES = t_unif.c
t_unif_OBJECTS = t_unif.$(OBJEXT)
t_unif_LDADD = $(LDADD)
t_unif_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_unur_error_SOURCES = t_unur_error.c
t_unur_error_OBJECTS = t_unur_error.$(OBJEXT)
t_unur_error_LDADD = $(LDADD)
t_unur_error_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_unur_tests_SOURCES = t_unur_tests.c
t_unur_tests_OBJECTS = t_unur_tests.$(OBJEXT)
t_unur_tests_LDADD = $(LDADD)
t_unur_tests_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_urng_SOURCES = t_urng.c
t_urng_OBJECTS = t_urng.$(OBJEXT)
t_urng_LDADD = $(LDADD)
t_urng_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_utdr_SOURCES = t_utdr.c
t_utdr_OBJECTS = t_utdr.$(OBJEXT)
t_utdr_LDADD = $(LDADD)
t_utdr_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_util_matrix_SOURCES = t_util_matrix.c
t_util_matrix_OBJECTS = t_util_matrix.$(OBJEXT)
t_util_matrix_LDADD = $(LDADD)
t_util_matrix_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_vempk_SOURCES = t_vempk.c
t_vempk_OBJECTS = t_vempk.$(OBJEXT)
t_vempk_LDADD = $(LDADD)
t_vempk_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_vnrou_SOURCES = t_vnrou.c
t_vnrou_OBJECTS = t_vnrou.$(OBJEXT)
t_vnrou_LDADD = $(LDADD)
t_vnrou_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
t_x_gen_SOURCES = t_x_gen.c
t_x_gen_OBJECTS = t_x_gen.$(OBJEXT)
t_x_gen_LDADD = $(LDADD)
t_x_gen_DEPENDENCIES = libtestroutines.la \
	$(top_builddir)/tests/testdistributions/libtestdistributions.la \
	$(top_builddir)/src/libunuran.la
am__test_StdDistr_SOURCES_DIST = test_StdDistr.c
#am_test_StdDistr_OBJECTS =  \
#	test_StdDistr.$(OBJEXT)
test_StdDistr_OBJECTS = $(am_test_StdDistr_OBJECTS)
test_StdDistr_LDADD = $(LDADD)
am__test_functionparser_SOURCES_DIST = test_functionparser.c
#am_test_functionparser_OBJECTS =  \
#	test_functionparser.$(OBJEXT)
test_functionparser_OBJECTS = $(am_test_functionparser_OBJECTS)
test_functionparser_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/autoconf/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/t_arou.Po ./$(DEPDIR)/t_ars.Po \
	./$(DEPDIR)/t_auto.Po ./$(DEPDIR)/t_cext.Po \
	./$(DEPDIR)/t_cstd.Po ./$(DEPDIR)/t_dari.Po \
	./$(DEPDIR)/t_dau.Po ./$(DEPDIR)/t_deprecated_tdrgw.Po \
	./$(DEPDIR)/t_deprecated_vmt.Po ./$(DEPDIR)/t_dext.Po \
	./$(DEPDIR)/t_dgt.Po ./$(DEPDIR)/t_distr.Po \
	./$(DEPDIR)/t_distr_cemp.Po ./$(DEPDIR)/t_distr_condi.Po \
	./$(DEPDIR)/t_distr_cont.Po ./$(DEPDIR)/t_distr_corder.Po \
	./$(DEPDIR)/t_distr_cvec.Po ./$(DEPDIR)/t_distr_cvemp.Po \
	./$(DEPDIR)/t_distr_cxtrans.Po ./$(DEPDIR)/t_distr_discr.Po \
	./$(DEPDIR)/t_distr_matr.Po ./$(DEPDIR)/t_dsrou.Po \
	./$(DEPDIR)/t_dss.Po ./$(DEPDIR)/t_dstd.Po \
	./$(DEPDIR)/t_empk.Po ./$(DEPDIR)/t_empl.Po \
	./$(DEPDIR)/t_gibbs.Po ./$(DEPDIR)/t_hinv.Po \
	./$(DEPDIR)/t_hist.Po ./$(DEPDIR)/t_hitro.Po \
	./$(DEPDIR)/t_hrb.Po ./$(DEPDIR)/t_hrd.Po ./$(DEPDIR)/t_hri.Po \
	./$(DEPDIR)/t_info.Po ./$(DEPDIR)/t_itdr.Po \
	./$(DEPDIR)/t_mcorr.Po ./$(DEPDIR)/t_mixt.Po \
	./$(DEPDIR)/t_mvstd.Po ./$(DEPDIR)/t_mvtdr.Po \
	./$(DEPDIR)/t_ninv.Po ./$(DEPDIR)/t_norta.Po \
	./$(DEPDIR)/t_nrou.Po ./$(DEPDIR)/t_pinv.Po \
	./$(DEPDIR)/t_srou.Po ./$(DEPDIR)/t_ssr.Po \
	./$(DEPDIR)/t_stringparser.Po ./$(DEPDIR)/t_tabl.Po \
	./$(DEPDIR)/t_tdr.Po ./$(DEPDIR)/t_tdr_gw.Po \
	./$(DEPDIR)/t_tdr_ia.Po ./$(DEPDIR)/t_tdr_ps.Po \
	./$(DEPDIR)/t_unif.Po ./$(DEPDIR)/t_unur_error.Po \
	./$(DEPDIR)/t_unur_tests.Po ./$(DEPDIR)/t_urng.Po \
	./$(DEPDIR)/t_utdr.Po ./$(DEPDIR)/t_util_matrix.Po \
	./$(DEPDIR)/t_vempk.Po ./$(DEPDIR)/t_vnrou.Po \
	./$(DEPDIR)/t_x_gen.Po ./$(DEPDIR)/test_StdDistr.Po \
	./$(DEPDIR)/test_functionparser.Po ./$(DEPDIR)/testcounter.Plo \
	./$(DEPDIR)/testroutines.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libtestroutines_la_SOURCES) t_arou.c t_ars.c t_auto.c \
	t_cext.c t_cstd.c t_dari.c t_dau.c t_deprecated_tdrgw.c \
	t_deprecated_vmt.c t_dext.c t_dgt.c t_distr.c t_distr_cemp.c \
	t_distr_condi.c t_distr_cont.c t_distr_corder.c t_distr_cvec.c \
	t_distr_cvemp.c t_distr_cxtrans.c t_distr_discr.c \
	t_distr_matr.c t_dsrou.c t_dss.c t_dstd.c t_empk.c t_empl.c \
	t_gibbs.c t_hinv.c t_hist.c t_hitro.c t_hrb.c t_hrd.c t_hri.c \
	t_info.c t_itdr.c t_mcorr.c t_mixt.c t_mvstd.c t_mvtdr.c \
	t_ninv.c t_norta.c t_nrou.c t_pinv.c t_srou.c t_ssr.c \
	t_stringparser.c t_tabl.c t_tdr.c t_tdr_gw.c t_tdr_ia.c \
	t_tdr_ps.c t_unif.c t_unur_error.c t_unur_tests.c t_urng.c \
	t_utdr.c t_util_matrix.c t_vempk.c t_vnrou.c t_x_gen.c \
	$(test_StdDistr_SOURCES) $(test_functionparser_SOURCES)
DIST_SOURCES = $(libtestroutines_la_SOURCES) t_arou.c t_ars.c t_auto.c \
	t_cext.c t_cstd.c t_dari.c t_dau.c t_deprecated_tdrgw.c \
	t_deprecated_vmt.c t_dext.c t_dgt.c t_distr.c t_distr_cemp.c \
	t_distr_condi.c t_distr_cont.c t_distr_corder.c t_distr_cvec.c \
	t_distr_cvemp.c t_distr_cxtrans.c t_distr_discr.c \
	t_distr_matr.c t_dsrou.c t_dss.c t_dstd.c t_empk.c t_empl.c \
	t_gibbs.c t_hinv.c t_hist.c t_hitro.c t_hrb.c t_hrd.c t_hri.c \
	t_info.c t_itdr.c t_mcorr.c t_mixt.c t_mvstd.c t_mvtdr.c \
	t_ninv.c t_norta.c t_nrou.c t_pinv.c t_srou.c t_ssr.c \
	t_stringparser.c t_tabl.c t_tdr.c t_tdr_gw.c t_tdr_ia.c \
	t_tdr_ps.c t_unif.c t_unur_error.c t_unur_tests.c t_urng.c \
	t_utdr.c t_util_matrix.c t_vempk.c t_vnrou.c t_x_gen.c \
	$(am__test_StdDistr_SOURCES_DIST) \
	$(am__test_functionparser_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	check recheck distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/autoconf/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/autoconf/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/autoconf/depcomp \
	$(top_srcdir)/autoconf/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = aclocal-1.16
AMTAR = $${TAR-tar}
AM_CFLAGS =  -Wall -Wextra  -Wshadow
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.16
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_IEEE_COMPARISONS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBOBJS = 
LIBS = -lrngstreams -lm 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAINT = #
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = unuran
PACKAGE_BUGREPORT = unuran@statmath.wu.ac.at
PACKAGE_NAME = unuran
PACKAGE_STRING = unuran 1.8.1
PACKAGE_TARNAME = unuran
PACKAGE_URL = 
PACKAGE_VERSION = 1.8.1
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
UNURAN_LT_VERSION = 15:0:0
UNURAN_SUPPORTS_GSL = 
UNURAN_SUPPORTS_PRNG = 
UNURAN_SUPPORTS_RNGSTREAM = -DUNURAN_SUPPORTS_RNGSTREAM
VERSION = 1.8.1
abs_builddir = /home/tirthasheshpatel/Desktop/UNU.RAN/unuran-1.8.1/tests
abs_srcdir = /home/tirthasheshpatel/Desktop/UNU.RAN/unuran-1.8.1/tests
abs_top_builddir = /home/tirthasheshpatel/Desktop/UNU.RAN/unuran-1.8.1
abs_top_srcdir = /home/tirthasheshpatel/Desktop/UNU.RAN/unuran-1.8.1
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_valgrind = false
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/tirthasheshpatel/Desktop/UNU.RAN/unuran-1.8.1/autoconf/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/tirthasheshpatel/Desktop/UNU.RAN/unuran-1.8.1/build
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
SUBDIRS = testdistributions .
AM_CPPFLAGS = \
 $(UNURAN_SUPPORTS_GSL) \
 $(UNURAN_SUPPORTS_PRNG) \
 $(UNURAN_SUPPORTS_RNGSTREAM) \
 -I$(top_srcdir)/src \
 -I$(top_srcdir)/src/tests

noinst_LTLIBRARIES = libtestroutines.la
libtestroutines_la_SOURCES = testroutines.c testcounter.c
LDADD = \
 libtestroutines.la \
 $(top_builddir)/tests/testdistributions/libtestdistributions.la \
 $(top_builddir)/src/libunuran.la

MATHEMATICA_PROGS = 

# Special files for tests with Mathematica(TM)
#MATHEMATICA_PROGS = test_StdDistr  test_functionparser
DEPRECATED_TESTS = 

# Files that contain deprecated routines
#DEPRECATED_TESTS = t_deprecated_vmt t_deprecated_tdrgw
TESTS = $(check_PROGRAMS)

# These tests fail until we fix some bugs
#XFAIL_TESTS = 
noinst_HEADERS = \
 testunuran.h

EXTRA_DIST = \
 test_StdDistr.m \
 test_functionparser.m \
 make_test_files.pl \
 README.conf \
 t_info.conf \
 t_stringparser.conf \
 t_x_gen.conf \
 t_unur_tests.conf \
 t_unur_error.conf \
 t_urng.conf \
 t_util_matrix.conf \
 t_distr.conf \
 t_distr_cemp.conf \
 t_distr_cont.conf \
 t_distr_corder.conf \
 t_distr_cvec.conf \
 t_distr_condi.conf \
 t_distr_cvemp.conf \
 t_distr_cxtrans.conf \
 t_distr_discr.conf \
 t_distr_matr.conf \
 t_auto.conf \
 t_arou.conf \
 t_ars.conf \
 t_cext.conf \
 t_cstd.conf \
 t_dari.conf \
 t_dau.conf \
 t_dext.conf \
 t_dgt.conf \
 t_dsrou.conf \
 t_dss.conf \
 t_dstd.conf \
 t_empk.conf \
 t_empl.conf \
 t_gibbs.conf \
 t_hinv.conf \
 t_hinv.conf \
 t_hist.conf \
 t_hrb.conf \
 t_hrd.conf \
 t_hri.conf \
 t_itdr.conf \
 t_mcorr.conf \
 t_mvstd.conf \
 t_ninv.conf \
 t_norta.conf \
 t_nrou.conf \
 t_pinv \
 t_srou.conf \
 t_ssr.conf \
 t_tabl.conf \
 t_tdr.conf t_tdr_gw.conf t_tdr_ps.conf t_tdr_ia.conf \
 t_unif.conf \
 t_utdr.conf \
 t_vempk.conf \
 t_vnrou.conf \
\
 t_deprecated_vmt.conf


# Compare results of CDF, PDF, and dPDF of standard distributions
# and results of function parser to those produced with 
# Mathematica(TM) ...
#test_StdDistr_SOURCES = test_StdDistr.c
#test_StdDistr_DEPENDENCIES = t_StdDistr.data
#test_functionparser_SOURCES = test_functionparser.c
#test_functionparser_DEPENDENCIES = t_functionparser.data

# Generate C sources for tests
SUFFIXES = .c

# clean log files and backup files
CLEANFILES = \
 *.log \
 valgrind-* \
 unuran-valgrind-* \
 *~


# clean generated files
DISTCLEANFILES = \
 rm -f t_*.data


# clean generated files
MAINTAINERCLEANFILES = \
 rm -f t_*.c \
 Makefile.in

all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .conf .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libtestroutines.la: $(libtestroutines_la_OBJECTS) $(libtestroutines_la_DEPENDENCIES) $(EXTRA_libtestroutines_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK)  $(libtestroutines_la_OBJECTS) $(libtestroutines_la_LIBADD) $(LIBS)

t_arou$(EXEEXT): $(t_arou_OBJECTS) $(t_arou_DEPENDENCIES) $(EXTRA_t_arou_DEPENDENCIES) 
	@rm -f t_arou$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_arou_OBJECTS) $(t_arou_LDADD) $(LIBS)

t_ars$(EXEEXT): $(t_ars_OBJECTS) $(t_ars_DEPENDENCIES) $(EXTRA_t_ars_DEPENDENCIES) 
	@rm -f t_ars$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_ars_OBJECTS) $(t_ars_LDADD) $(LIBS)

t_auto$(EXEEXT): $(t_auto_OBJECTS) $(t_auto_DEPENDENCIES) $(EXTRA_t_auto_DEPENDENCIES) 
	@rm -f t_auto$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_auto_OBJECTS) $(t_auto_LDADD) $(LIBS)

t_cext$(EXEEXT): $(t_cext_OBJECTS) $(t_cext_DEPENDENCIES) $(EXTRA_t_cext_DEPENDENCIES) 
	@rm -f t_cext$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_cext_OBJECTS) $(t_cext_LDADD) $(LIBS)

t_cstd$(EXEEXT): $(t_cstd_OBJECTS) $(t_cstd_DEPENDENCIES) $(EXTRA_t_cstd_DEPENDENCIES) 
	@rm -f t_cstd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_cstd_OBJECTS) $(t_cstd_LDADD) $(LIBS)

t_dari$(EXEEXT): $(t_dari_OBJECTS) $(t_dari_DEPENDENCIES) $(EXTRA_t_dari_DEPENDENCIES) 
	@rm -f t_dari$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dari_OBJECTS) $(t_dari_LDADD) $(LIBS)

t_dau$(EXEEXT): $(t_dau_OBJECTS) $(t_dau_DEPENDENCIES) $(EXTRA_t_dau_DEPENDENCIES) 
	@rm -f t_dau$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dau_OBJECTS) $(t_dau_LDADD) $(LIBS)

t_deprecated_tdrgw$(EXEEXT): $(t_deprecated_tdrgw_OBJECTS) $(t_deprecated_tdrgw_DEPENDENCIES) $(EXTRA_t_deprecated_tdrgw_DEPENDENCIES) 
	@rm -f t_deprecated_tdrgw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_deprecated_tdrgw_OBJECTS) $(t_deprecated_tdrgw_LDADD) $(LIBS)

t_deprecated_vmt$(EXEEXT): $(t_deprecated_vmt_OBJECTS) $(t_deprecated_vmt_DEPENDENCIES) $(EXTRA_t_deprecated_vmt_DEPENDENCIES) 
	@rm -f t_deprecated_vmt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_deprecated_vmt_OBJECTS) $(t_deprecated_vmt_LDADD) $(LIBS)

t_dext$(EXEEXT): $(t_dext_OBJECTS) $(t_dext_DEPENDENCIES) $(EXTRA_t_dext_DEPENDENCIES) 
	@rm -f t_dext$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dext_OBJECTS) $(t_dext_LDADD) $(LIBS)

t_dgt$(EXEEXT): $(t_dgt_OBJECTS) $(t_dgt_DEPENDENCIES) $(EXTRA_t_dgt_DEPENDENCIES) 
	@rm -f t_dgt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dgt_OBJECTS) $(t_dgt_LDADD) $(LIBS)

t_distr$(EXEEXT): $(t_distr_OBJECTS) $(t_distr_DEPENDENCIES) $(EXTRA_t_distr_DEPENDENCIES) 
	@rm -f t_distr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_OBJECTS) $(t_distr_LDADD) $(LIBS)

t_distr_cemp$(EXEEXT): $(t_distr_cemp_OBJECTS) $(t_distr_cemp_DEPENDENCIES) $(EXTRA_t_distr_cemp_DEPENDENCIES) 
	@rm -f t_distr_cemp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_cemp_OBJECTS) $(t_distr_cemp_LDADD) $(LIBS)

t_distr_condi$(EXEEXT): $(t_distr_condi_OBJECTS) $(t_distr_condi_DEPENDENCIES) $(EXTRA_t_distr_condi_DEPENDENCIES) 
	@rm -f t_distr_condi$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_condi_OBJECTS) $(t_distr_condi_LDADD) $(LIBS)

t_distr_cont$(EXEEXT): $(t_distr_cont_OBJECTS) $(t_distr_cont_DEPENDENCIES) $(EXTRA_t_distr_cont_DEPENDENCIES) 
	@rm -f t_distr_cont$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_cont_OBJECTS) $(t_distr_cont_LDADD) $(LIBS)

t_distr_corder$(EXEEXT): $(t_distr_corder_OBJECTS) $(t_distr_corder_DEPENDENCIES) $(EXTRA_t_distr_corder_DEPENDENCIES) 
	@rm -f t_distr_corder$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_corder_OBJECTS) $(t_distr_corder_LDADD) $(LIBS)

t_distr_cvec$(EXEEXT): $(t_distr_cvec_OBJECTS) $(t_distr_cvec_DEPENDENCIES) $(EXTRA_t_distr_cvec_DEPENDENCIES) 
	@rm -f t_distr_cvec$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_cvec_OBJECTS) $(t_distr_cvec_LDADD) $(LIBS)

t_distr_cvemp$(EXEEXT): $(t_distr_cvemp_OBJECTS) $(t_distr_cvemp_DEPENDENCIES) $(EXTRA_t_distr_cvemp_DEPENDENCIES) 
	@rm -f t_distr_cvemp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_cvemp_OBJECTS) $(t_distr_cvemp_LDADD) $(LIBS)

t_distr_cxtrans$(EXEEXT): $(t_distr_cxtrans_OBJECTS) $(t_distr_cxtrans_DEPENDENCIES) $(EXTRA_t_distr_cxtrans_DEPENDENCIES) 
	@rm -f t_distr_cxtrans$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_cxtrans_OBJECTS) $(t_distr_cxtrans_LDADD) $(LIBS)

t_distr_discr$(EXEEXT): $(t_distr_discr_OBJECTS) $(t_distr_discr_DEPENDENCIES) $(EXTRA_t_distr_discr_DEPENDENCIES) 
	@rm -f t_distr_discr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_discr_OBJECTS) $(t_distr_discr_LDADD) $(LIBS)

t_distr_matr$(EXEEXT): $(t_distr_matr_OBJECTS) $(t_distr_matr_DEPENDENCIES) $(EXTRA_t_distr_matr_DEPENDENCIES) 
	@rm -f t_distr_matr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_distr_matr_OBJECTS) $(t_distr_matr_LDADD) $(LIBS)

t_dsrou$(EXEEXT): $(t_dsrou_OBJECTS) $(t_dsrou_DEPENDENCIES) $(EXTRA_t_dsrou_DEPENDENCIES) 
	@rm -f t_dsrou$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dsrou_OBJECTS) $(t_dsrou_LDADD) $(LIBS)

t_dss$(EXEEXT): $(t_dss_OBJECTS) $(t_dss_DEPENDENCIES) $(EXTRA_t_dss_DEPENDENCIES) 
	@rm -f t_dss$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dss_OBJECTS) $(t_dss_LDADD) $(LIBS)

t_dstd$(EXEEXT): $(t_dstd_OBJECTS) $(t_dstd_DEPENDENCIES) $(EXTRA_t_dstd_DEPENDENCIES) 
	@rm -f t_dstd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_dstd_OBJECTS) $(t_dstd_LDADD) $(LIBS)

t_empk$(EXEEXT): $(t_empk_OBJECTS) $(t_empk_DEPENDENCIES) $(EXTRA_t_empk_DEPENDENCIES) 
	@rm -f t_empk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_empk_OBJECTS) $(t_empk_LDADD) $(LIBS)

t_empl$(EXEEXT): $(t_empl_OBJECTS) $(t_empl_DEPENDENCIES) $(EXTRA_t_empl_DEPENDENCIES) 
	@rm -f t_empl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_empl_OBJECTS) $(t_empl_LDADD) $(LIBS)

t_gibbs$(EXEEXT): $(t_gibbs_OBJECTS) $(t_gibbs_DEPENDENCIES) $(EXTRA_t_gibbs_DEPENDENCIES) 
	@rm -f t_gibbs$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_gibbs_OBJECTS) $(t_gibbs_LDADD) $(LIBS)

t_hinv$(EXEEXT): $(t_hinv_OBJECTS) $(t_hinv_DEPENDENCIES) $(EXTRA_t_hinv_DEPENDENCIES) 
	@rm -f t_hinv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_hinv_OBJECTS) $(t_hinv_LDADD) $(LIBS)

t_hist$(EXEEXT): $(t_hist_OBJECTS) $(t_hist_DEPENDENCIES) $(EXTRA_t_hist_DEPENDENCIES) 
	@rm -f t_hist$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_hist_OBJECTS) $(t_hist_LDADD) $(LIBS)

t_hitro$(EXEEXT): $(t_hitro_OBJECTS) $(t_hitro_DEPENDENCIES) $(EXTRA_t_hitro_DEPENDENCIES) 
	@rm -f t_hitro$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_hitro_OBJECTS) $(t_hitro_LDADD) $(LIBS)

t_hrb$(EXEEXT): $(t_hrb_OBJECTS) $(t_hrb_DEPENDENCIES) $(EXTRA_t_hrb_DEPENDENCIES) 
	@rm -f t_hrb$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_hrb_OBJECTS) $(t_hrb_LDADD) $(LIBS)

t_hrd$(EXEEXT): $(t_hrd_OBJECTS) $(t_hrd_DEPENDENCIES) $(EXTRA_t_hrd_DEPENDENCIES) 
	@rm -f t_hrd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_hrd_OBJECTS) $(t_hrd_LDADD) $(LIBS)

t_hri$(EXEEXT): $(t_hri_OBJECTS) $(t_hri_DEPENDENCIES) $(EXTRA_t_hri_DEPENDENCIES) 
	@rm -f t_hri$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_hri_OBJECTS) $(t_hri_LDADD) $(LIBS)

t_info$(EXEEXT): $(t_info_OBJECTS) $(t_info_DEPENDENCIES) $(EXTRA_t_info_DEPENDENCIES) 
	@rm -f t_info$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_info_OBJECTS) $(t_info_LDADD) $(LIBS)

t_itdr$(EXEEXT): $(t_itdr_OBJECTS) $(t_itdr_DEPENDENCIES) $(EXTRA_t_itdr_DEPENDENCIES) 
	@rm -f t_itdr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_itdr_OBJECTS) $(t_itdr_LDADD) $(LIBS)

t_mcorr$(EXEEXT): $(t_mcorr_OBJECTS) $(t_mcorr_DEPENDENCIES) $(EXTRA_t_mcorr_DEPENDENCIES) 
	@rm -f t_mcorr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_mcorr_OBJECTS) $(t_mcorr_LDADD) $(LIBS)

t_mixt$(EXEEXT): $(t_mixt_OBJECTS) $(t_mixt_DEPENDENCIES) $(EXTRA_t_mixt_DEPENDENCIES) 
	@rm -f t_mixt$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_mixt_OBJECTS) $(t_mixt_LDADD) $(LIBS)

t_mvstd$(EXEEXT): $(t_mvstd_OBJECTS) $(t_mvstd_DEPENDENCIES) $(EXTRA_t_mvstd_DEPENDENCIES) 
	@rm -f t_mvstd$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_mvstd_OBJECTS) $(t_mvstd_LDADD) $(LIBS)

t_mvtdr$(EXEEXT): $(t_mvtdr_OBJECTS) $(t_mvtdr_DEPENDENCIES) $(EXTRA_t_mvtdr_DEPENDENCIES) 
	@rm -f t_mvtdr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_mvtdr_OBJECTS) $(t_mvtdr_LDADD) $(LIBS)

t_ninv$(EXEEXT): $(t_ninv_OBJECTS) $(t_ninv_DEPENDENCIES) $(EXTRA_t_ninv_DEPENDENCIES) 
	@rm -f t_ninv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_ninv_OBJECTS) $(t_ninv_LDADD) $(LIBS)

t_norta$(EXEEXT): $(t_norta_OBJECTS) $(t_norta_DEPENDENCIES) $(EXTRA_t_norta_DEPENDENCIES) 
	@rm -f t_norta$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_norta_OBJECTS) $(t_norta_LDADD) $(LIBS)

t_nrou$(EXEEXT): $(t_nrou_OBJECTS) $(t_nrou_DEPENDENCIES) $(EXTRA_t_nrou_DEPENDENCIES) 
	@rm -f t_nrou$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_nrou_OBJECTS) $(t_nrou_LDADD) $(LIBS)

t_pinv$(EXEEXT): $(t_pinv_OBJECTS) $(t_pinv_DEPENDENCIES) $(EXTRA_t_pinv_DEPENDENCIES) 
	@rm -f t_pinv$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_pinv_OBJECTS) $(t_pinv_LDADD) $(LIBS)

t_srou$(EXEEXT): $(t_srou_OBJECTS) $(t_srou_DEPENDENCIES) $(EXTRA_t_srou_DEPENDENCIES) 
	@rm -f t_srou$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_srou_OBJECTS) $(t_srou_LDADD) $(LIBS)

t_ssr$(EXEEXT): $(t_ssr_OBJECTS) $(t_ssr_DEPENDENCIES) $(EXTRA_t_ssr_DEPENDENCIES) 
	@rm -f t_ssr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_ssr_OBJECTS) $(t_ssr_LDADD) $(LIBS)

t_stringparser$(EXEEXT): $(t_stringparser_OBJECTS) $(t_stringparser_DEPENDENCIES) $(EXTRA_t_stringparser_DEPENDENCIES) 
	@rm -f t_stringparser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_stringparser_OBJECTS) $(t_stringparser_LDADD) $(LIBS)

t_tabl$(EXEEXT): $(t_tabl_OBJECTS) $(t_tabl_DEPENDENCIES) $(EXTRA_t_tabl_DEPENDENCIES) 
	@rm -f t_tabl$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_tabl_OBJECTS) $(t_tabl_LDADD) $(LIBS)

t_tdr$(EXEEXT): $(t_tdr_OBJECTS) $(t_tdr_DEPENDENCIES) $(EXTRA_t_tdr_DEPENDENCIES) 
	@rm -f t_tdr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_tdr_OBJECTS) $(t_tdr_LDADD) $(LIBS)

t_tdr_gw$(EXEEXT): $(t_tdr_gw_OBJECTS) $(t_tdr_gw_DEPENDENCIES) $(EXTRA_t_tdr_gw_DEPENDENCIES) 
	@rm -f t_tdr_gw$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_tdr_gw_OBJECTS) $(t_tdr_gw_LDADD) $(LIBS)

t_tdr_ia$(EXEEXT): $(t_tdr_ia_OBJECTS) $(t_tdr_ia_DEPENDENCIES) $(EXTRA_t_tdr_ia_DEPENDENCIES) 
	@rm -f t_tdr_ia$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_tdr_ia_OBJECTS) $(t_tdr_ia_LDADD) $(LIBS)

t_tdr_ps$(EXEEXT): $(t_tdr_ps_OBJECTS) $(t_tdr_ps_DEPENDENCIES) $(EXTRA_t_tdr_ps_DEPENDENCIES) 
	@rm -f t_tdr_ps$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_tdr_ps_OBJECTS) $(t_tdr_ps_LDADD) $(LIBS)

t_unif$(EXEEXT): $(t_unif_OBJECTS) $(t_unif_DEPENDENCIES) $(EXTRA_t_unif_DEPENDENCIES) 
	@rm -f t_unif$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_unif_OBJECTS) $(t_unif_LDADD) $(LIBS)

t_unur_error$(EXEEXT): $(t_unur_error_OBJECTS) $(t_unur_error_DEPENDENCIES) $(EXTRA_t_unur_error_DEPENDENCIES) 
	@rm -f t_unur_error$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_unur_error_OBJECTS) $(t_unur_error_LDADD) $(LIBS)

t_unur_tests$(EXEEXT): $(t_unur_tests_OBJECTS) $(t_unur_tests_DEPENDENCIES) $(EXTRA_t_unur_tests_DEPENDENCIES) 
	@rm -f t_unur_tests$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_unur_tests_OBJECTS) $(t_unur_tests_LDADD) $(LIBS)

t_urng$(EXEEXT): $(t_urng_OBJECTS) $(t_urng_DEPENDENCIES) $(EXTRA_t_urng_DEPENDENCIES) 
	@rm -f t_urng$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_urng_OBJECTS) $(t_urng_LDADD) $(LIBS)

t_utdr$(EXEEXT): $(t_utdr_OBJECTS) $(t_utdr_DEPENDENCIES) $(EXTRA_t_utdr_DEPENDENCIES) 
	@rm -f t_utdr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_utdr_OBJECTS) $(t_utdr_LDADD) $(LIBS)

t_util_matrix$(EXEEXT): $(t_util_matrix_OBJECTS) $(t_util_matrix_DEPENDENCIES) $(EXTRA_t_util_matrix_DEPENDENCIES) 
	@rm -f t_util_matrix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_util_matrix_OBJECTS) $(t_util_matrix_LDADD) $(LIBS)

t_vempk$(EXEEXT): $(t_vempk_OBJECTS) $(t_vempk_DEPENDENCIES) $(EXTRA_t_vempk_DEPENDENCIES) 
	@rm -f t_vempk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_vempk_OBJECTS) $(t_vempk_LDADD) $(LIBS)

t_vnrou$(EXEEXT): $(t_vnrou_OBJECTS) $(t_vnrou_DEPENDENCIES) $(EXTRA_t_vnrou_DEPENDENCIES) 
	@rm -f t_vnrou$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_vnrou_OBJECTS) $(t_vnrou_LDADD) $(LIBS)

t_x_gen$(EXEEXT): $(t_x_gen_OBJECTS) $(t_x_gen_DEPENDENCIES) $(EXTRA_t_x_gen_DEPENDENCIES) 
	@rm -f t_x_gen$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(t_x_gen_OBJECTS) $(t_x_gen_LDADD) $(LIBS)

test_StdDistr$(EXEEXT): $(test_StdDistr_OBJECTS) $(test_StdDistr_DEPENDENCIES) $(EXTRA_test_StdDistr_DEPENDENCIES) 
	@rm -f test_StdDistr$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_StdDistr_OBJECTS) $(test_StdDistr_LDADD) $(LIBS)

test_functionparser$(EXEEXT): $(test_functionparser_OBJECTS) $(test_functionparser_DEPENDENCIES) $(EXTRA_test_functionparser_DEPENDENCIES) 
	@rm -f test_functionparser$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_functionparser_OBJECTS) $(test_functionparser_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/t_arou.Po # am--include-marker
include ./$(DEPDIR)/t_ars.Po # am--include-marker
include ./$(DEPDIR)/t_auto.Po # am--include-marker
include ./$(DEPDIR)/t_cext.Po # am--include-marker
include ./$(DEPDIR)/t_cstd.Po # am--include-marker
include ./$(DEPDIR)/t_dari.Po # am--include-marker
include ./$(DEPDIR)/t_dau.Po # am--include-marker
include ./$(DEPDIR)/t_deprecated_tdrgw.Po # am--include-marker
include ./$(DEPDIR)/t_deprecated_vmt.Po # am--include-marker
include ./$(DEPDIR)/t_dext.Po # am--include-marker
include ./$(DEPDIR)/t_dgt.Po # am--include-marker
include ./$(DEPDIR)/t_distr.Po # am--include-marker
include ./$(DEPDIR)/t_distr_cemp.Po # am--include-marker
include ./$(DEPDIR)/t_distr_condi.Po # am--include-marker
include ./$(DEPDIR)/t_distr_cont.Po # am--include-marker
include ./$(DEPDIR)/t_distr_corder.Po # am--include-marker
include ./$(DEPDIR)/t_distr_cvec.Po # am--include-marker
include ./$(DEPDIR)/t_distr_cvemp.Po # am--include-marker
include ./$(DEPDIR)/t_distr_cxtrans.Po # am--include-marker
include ./$(DEPDIR)/t_distr_discr.Po # am--include-marker
include ./$(DEPDIR)/t_distr_matr.Po # am--include-marker
include ./$(DEPDIR)/t_dsrou.Po # am--include-marker
include ./$(DEPDIR)/t_dss.Po # am--include-marker
include ./$(DEPDIR)/t_dstd.Po # am--include-marker
include ./$(DEPDIR)/t_empk.Po # am--include-marker
include ./$(DEPDIR)/t_empl.Po # am--include-marker
include ./$(DEPDIR)/t_gibbs.Po # am--include-marker
include ./$(DEPDIR)/t_hinv.Po # am--include-marker
include ./$(DEPDIR)/t_hist.Po # am--include-marker
include ./$(DEPDIR)/t_hitro.Po # am--include-marker
include ./$(DEPDIR)/t_hrb.Po # am--include-marker
include ./$(DEPDIR)/t_hrd.Po # am--include-marker
include ./$(DEPDIR)/t_hri.Po # am--include-marker
include ./$(DEPDIR)/t_info.Po # am--include-marker
include ./$(DEPDIR)/t_itdr.Po # am--include-marker
include ./$(DEPDIR)/t_mcorr.Po # am--include-marker
include ./$(DEPDIR)/t_mixt.Po # am--include-marker
include ./$(DEPDIR)/t_mvstd.Po # am--include-marker
include ./$(DEPDIR)/t_mvtdr.Po # am--include-marker
include ./$(DEPDIR)/t_ninv.Po # am--include-marker
include ./$(DEPDIR)/t_norta.Po # am--include-marker
include ./$(DEPDIR)/t_nrou.Po # am--include-marker
include ./$(DEPDIR)/t_pinv.Po # am--include-marker
include ./$(DEPDIR)/t_srou.Po # am--include-marker
include ./$(DEPDIR)/t_ssr.Po # am--include-marker
include ./$(DEPDIR)/t_stringparser.Po # am--include-marker
include ./$(DEPDIR)/t_tabl.Po # am--include-marker
include ./$(DEPDIR)/t_tdr.Po # am--include-marker
include ./$(DEPDIR)/t_tdr_gw.Po # am--include-marker
include ./$(DEPDIR)/t_tdr_ia.Po # am--include-marker
include ./$(DEPDIR)/t_tdr_ps.Po # am--include-marker
include ./$(DEPDIR)/t_unif.Po # am--include-marker
include ./$(DEPDIR)/t_unur_error.Po # am--include-marker
include ./$(DEPDIR)/t_unur_tests.Po # am--include-marker
include ./$(DEPDIR)/t_urng.Po # am--include-marker
include ./$(DEPDIR)/t_utdr.Po # am--include-marker
include ./$(DEPDIR)/t_util_matrix.Po # am--include-marker
include ./$(DEPDIR)/t_vempk.Po # am--include-marker
include ./$(DEPDIR)/t_vnrou.Po # am--include-marker
include ./$(DEPDIR)/t_x_gen.Po # am--include-marker
include ./$(DEPDIR)/test_StdDistr.Po # am--include-marker
include ./$(DEPDIR)/test_functionparser.Po # am--include-marker
include ./$(DEPDIR)/testcounter.Plo # am--include-marker
include ./$(DEPDIR)/testroutines.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS: $(check_PROGRAMS)
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
t_x_gen.log: t_x_gen$(EXEEXT)
	@p='t_x_gen$(EXEEXT)'; \
	b='t_x_gen'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_unur_tests.log: t_unur_tests$(EXEEXT)
	@p='t_unur_tests$(EXEEXT)'; \
	b='t_unur_tests'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_unur_error.log: t_unur_error$(EXEEXT)
	@p='t_unur_error$(EXEEXT)'; \
	b='t_unur_error'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_urng.log: t_urng$(EXEEXT)
	@p='t_urng$(EXEEXT)'; \
	b='t_urng'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr.log: t_distr$(EXEEXT)
	@p='t_distr$(EXEEXT)'; \
	b='t_distr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_cemp.log: t_distr_cemp$(EXEEXT)
	@p='t_distr_cemp$(EXEEXT)'; \
	b='t_distr_cemp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_cont.log: t_distr_cont$(EXEEXT)
	@p='t_distr_cont$(EXEEXT)'; \
	b='t_distr_cont'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_corder.log: t_distr_corder$(EXEEXT)
	@p='t_distr_corder$(EXEEXT)'; \
	b='t_distr_corder'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_cvec.log: t_distr_cvec$(EXEEXT)
	@p='t_distr_cvec$(EXEEXT)'; \
	b='t_distr_cvec'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_condi.log: t_distr_condi$(EXEEXT)
	@p='t_distr_condi$(EXEEXT)'; \
	b='t_distr_condi'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_cvemp.log: t_distr_cvemp$(EXEEXT)
	@p='t_distr_cvemp$(EXEEXT)'; \
	b='t_distr_cvemp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_cxtrans.log: t_distr_cxtrans$(EXEEXT)
	@p='t_distr_cxtrans$(EXEEXT)'; \
	b='t_distr_cxtrans'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_discr.log: t_distr_discr$(EXEEXT)
	@p='t_distr_discr$(EXEEXT)'; \
	b='t_distr_discr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_distr_matr.log: t_distr_matr$(EXEEXT)
	@p='t_distr_matr$(EXEEXT)'; \
	b='t_distr_matr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_auto.log: t_auto$(EXEEXT)
	@p='t_auto$(EXEEXT)'; \
	b='t_auto'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_arou.log: t_arou$(EXEEXT)
	@p='t_arou$(EXEEXT)'; \
	b='t_arou'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_ars.log: t_ars$(EXEEXT)
	@p='t_ars$(EXEEXT)'; \
	b='t_ars'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_cext.log: t_cext$(EXEEXT)
	@p='t_cext$(EXEEXT)'; \
	b='t_cext'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_cstd.log: t_cstd$(EXEEXT)
	@p='t_cstd$(EXEEXT)'; \
	b='t_cstd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dari.log: t_dari$(EXEEXT)
	@p='t_dari$(EXEEXT)'; \
	b='t_dari'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dau.log: t_dau$(EXEEXT)
	@p='t_dau$(EXEEXT)'; \
	b='t_dau'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dext.log: t_dext$(EXEEXT)
	@p='t_dext$(EXEEXT)'; \
	b='t_dext'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dgt.log: t_dgt$(EXEEXT)
	@p='t_dgt$(EXEEXT)'; \
	b='t_dgt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dsrou.log: t_dsrou$(EXEEXT)
	@p='t_dsrou$(EXEEXT)'; \
	b='t_dsrou'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dss.log: t_dss$(EXEEXT)
	@p='t_dss$(EXEEXT)'; \
	b='t_dss'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_dstd.log: t_dstd$(EXEEXT)
	@p='t_dstd$(EXEEXT)'; \
	b='t_dstd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_empk.log: t_empk$(EXEEXT)
	@p='t_empk$(EXEEXT)'; \
	b='t_empk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_empl.log: t_empl$(EXEEXT)
	@p='t_empl$(EXEEXT)'; \
	b='t_empl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_gibbs.log: t_gibbs$(EXEEXT)
	@p='t_gibbs$(EXEEXT)'; \
	b='t_gibbs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_hinv.log: t_hinv$(EXEEXT)
	@p='t_hinv$(EXEEXT)'; \
	b='t_hinv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_hist.log: t_hist$(EXEEXT)
	@p='t_hist$(EXEEXT)'; \
	b='t_hist'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_hitro.log: t_hitro$(EXEEXT)
	@p='t_hitro$(EXEEXT)'; \
	b='t_hitro'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_hrb.log: t_hrb$(EXEEXT)
	@p='t_hrb$(EXEEXT)'; \
	b='t_hrb'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_hrd.log: t_hrd$(EXEEXT)
	@p='t_hrd$(EXEEXT)'; \
	b='t_hrd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_hri.log: t_hri$(EXEEXT)
	@p='t_hri$(EXEEXT)'; \
	b='t_hri'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_itdr.log: t_itdr$(EXEEXT)
	@p='t_itdr$(EXEEXT)'; \
	b='t_itdr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_mcorr.log: t_mcorr$(EXEEXT)
	@p='t_mcorr$(EXEEXT)'; \
	b='t_mcorr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_mixt.log: t_mixt$(EXEEXT)
	@p='t_mixt$(EXEEXT)'; \
	b='t_mixt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_mvstd.log: t_mvstd$(EXEEXT)
	@p='t_mvstd$(EXEEXT)'; \
	b='t_mvstd'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_mvtdr.log: t_mvtdr$(EXEEXT)
	@p='t_mvtdr$(EXEEXT)'; \
	b='t_mvtdr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_ninv.log: t_ninv$(EXEEXT)
	@p='t_ninv$(EXEEXT)'; \
	b='t_ninv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_norta.log: t_norta$(EXEEXT)
	@p='t_norta$(EXEEXT)'; \
	b='t_norta'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_nrou.log: t_nrou$(EXEEXT)
	@p='t_nrou$(EXEEXT)'; \
	b='t_nrou'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_pinv.log: t_pinv$(EXEEXT)
	@p='t_pinv$(EXEEXT)'; \
	b='t_pinv'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_srou.log: t_srou$(EXEEXT)
	@p='t_srou$(EXEEXT)'; \
	b='t_srou'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_ssr.log: t_ssr$(EXEEXT)
	@p='t_ssr$(EXEEXT)'; \
	b='t_ssr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_tabl.log: t_tabl$(EXEEXT)
	@p='t_tabl$(EXEEXT)'; \
	b='t_tabl'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_tdr.log: t_tdr$(EXEEXT)
	@p='t_tdr$(EXEEXT)'; \
	b='t_tdr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_tdr_gw.log: t_tdr_gw$(EXEEXT)
	@p='t_tdr_gw$(EXEEXT)'; \
	b='t_tdr_gw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_tdr_ps.log: t_tdr_ps$(EXEEXT)
	@p='t_tdr_ps$(EXEEXT)'; \
	b='t_tdr_ps'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_tdr_ia.log: t_tdr_ia$(EXEEXT)
	@p='t_tdr_ia$(EXEEXT)'; \
	b='t_tdr_ia'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_unif.log: t_unif$(EXEEXT)
	@p='t_unif$(EXEEXT)'; \
	b='t_unif'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_utdr.log: t_utdr$(EXEEXT)
	@p='t_utdr$(EXEEXT)'; \
	b='t_utdr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_vempk.log: t_vempk$(EXEEXT)
	@p='t_vempk$(EXEEXT)'; \
	b='t_vempk'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_vnrou.log: t_vnrou$(EXEEXT)
	@p='t_vnrou$(EXEEXT)'; \
	b='t_vnrou'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_stringparser.log: t_stringparser$(EXEEXT)
	@p='t_stringparser$(EXEEXT)'; \
	b='t_stringparser'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_info.log: t_info$(EXEEXT)
	@p='t_info$(EXEEXT)'; \
	b='t_info'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_util_matrix.log: t_util_matrix$(EXEEXT)
	@p='t_util_matrix$(EXEEXT)'; \
	b='t_util_matrix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_deprecated_vmt.log: t_deprecated_vmt$(EXEEXT)
	@p='t_deprecated_vmt$(EXEEXT)'; \
	b='t_deprecated_vmt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
t_deprecated_tdrgw.log: t_deprecated_tdrgw$(EXEEXT)
	@p='t_deprecated_tdrgw$(EXEEXT)'; \
	b='t_deprecated_tdrgw'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_StdDistr.log: test_StdDistr$(EXEEXT)
	@p='test_StdDistr$(EXEEXT)'; \
	b='test_StdDistr'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test_functionparser.log: test_functionparser$(EXEEXT)
	@p='test_functionparser$(EXEEXT)'; \
	b='test_functionparser'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/t_arou.Po
	-rm -f ./$(DEPDIR)/t_ars.Po
	-rm -f ./$(DEPDIR)/t_auto.Po
	-rm -f ./$(DEPDIR)/t_cext.Po
	-rm -f ./$(DEPDIR)/t_cstd.Po
	-rm -f ./$(DEPDIR)/t_dari.Po
	-rm -f ./$(DEPDIR)/t_dau.Po
	-rm -f ./$(DEPDIR)/t_deprecated_tdrgw.Po
	-rm -f ./$(DEPDIR)/t_deprecated_vmt.Po
	-rm -f ./$(DEPDIR)/t_dext.Po
	-rm -f ./$(DEPDIR)/t_dgt.Po
	-rm -f ./$(DEPDIR)/t_distr.Po
	-rm -f ./$(DEPDIR)/t_distr_cemp.Po
	-rm -f ./$(DEPDIR)/t_distr_condi.Po
	-rm -f ./$(DEPDIR)/t_distr_cont.Po
	-rm -f ./$(DEPDIR)/t_distr_corder.Po
	-rm -f ./$(DEPDIR)/t_distr_cvec.Po
	-rm -f ./$(DEPDIR)/t_distr_cvemp.Po
	-rm -f ./$(DEPDIR)/t_distr_cxtrans.Po
	-rm -f ./$(DEPDIR)/t_distr_discr.Po
	-rm -f ./$(DEPDIR)/t_distr_matr.Po
	-rm -f ./$(DEPDIR)/t_dsrou.Po
	-rm -f ./$(DEPDIR)/t_dss.Po
	-rm -f ./$(DEPDIR)/t_dstd.Po
	-rm -f ./$(DEPDIR)/t_empk.Po
	-rm -f ./$(DEPDIR)/t_empl.Po
	-rm -f ./$(DEPDIR)/t_gibbs.Po
	-rm -f ./$(DEPDIR)/t_hinv.Po
	-rm -f ./$(DEPDIR)/t_hist.Po
	-rm -f ./$(DEPDIR)/t_hitro.Po
	-rm -f ./$(DEPDIR)/t_hrb.Po
	-rm -f ./$(DEPDIR)/t_hrd.Po
	-rm -f ./$(DEPDIR)/t_hri.Po
	-rm -f ./$(DEPDIR)/t_info.Po
	-rm -f ./$(DEPDIR)/t_itdr.Po
	-rm -f ./$(DEPDIR)/t_mcorr.Po
	-rm -f ./$(DEPDIR)/t_mixt.Po
	-rm -f ./$(DEPDIR)/t_mvstd.Po
	-rm -f ./$(DEPDIR)/t_mvtdr.Po
	-rm -f ./$(DEPDIR)/t_ninv.Po
	-rm -f ./$(DEPDIR)/t_norta.Po
	-rm -f ./$(DEPDIR)/t_nrou.Po
	-rm -f ./$(DEPDIR)/t_pinv.Po
	-rm -f ./$(DEPDIR)/t_srou.Po
	-rm -f ./$(DEPDIR)/t_ssr.Po
	-rm -f ./$(DEPDIR)/t_stringparser.Po
	-rm -f ./$(DEPDIR)/t_tabl.Po
	-rm -f ./$(DEPDIR)/t_tdr.Po
	-rm -f ./$(DEPDIR)/t_tdr_gw.Po
	-rm -f ./$(DEPDIR)/t_tdr_ia.Po
	-rm -f ./$(DEPDIR)/t_tdr_ps.Po
	-rm -f ./$(DEPDIR)/t_unif.Po
	-rm -f ./$(DEPDIR)/t_unur_error.Po
	-rm -f ./$(DEPDIR)/t_unur_tests.Po
	-rm -f ./$(DEPDIR)/t_urng.Po
	-rm -f ./$(DEPDIR)/t_utdr.Po
	-rm -f ./$(DEPDIR)/t_util_matrix.Po
	-rm -f ./$(DEPDIR)/t_vempk.Po
	-rm -f ./$(DEPDIR)/t_vnrou.Po
	-rm -f ./$(DEPDIR)/t_x_gen.Po
	-rm -f ./$(DEPDIR)/test_StdDistr.Po
	-rm -f ./$(DEPDIR)/test_functionparser.Po
	-rm -f ./$(DEPDIR)/testcounter.Plo
	-rm -f ./$(DEPDIR)/testroutines.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/t_arou.Po
	-rm -f ./$(DEPDIR)/t_ars.Po
	-rm -f ./$(DEPDIR)/t_auto.Po
	-rm -f ./$(DEPDIR)/t_cext.Po
	-rm -f ./$(DEPDIR)/t_cstd.Po
	-rm -f ./$(DEPDIR)/t_dari.Po
	-rm -f ./$(DEPDIR)/t_dau.Po
	-rm -f ./$(DEPDIR)/t_deprecated_tdrgw.Po
	-rm -f ./$(DEPDIR)/t_deprecated_vmt.Po
	-rm -f ./$(DEPDIR)/t_dext.Po
	-rm -f ./$(DEPDIR)/t_dgt.Po
	-rm -f ./$(DEPDIR)/t_distr.Po
	-rm -f ./$(DEPDIR)/t_distr_cemp.Po
	-rm -f ./$(DEPDIR)/t_distr_condi.Po
	-rm -f ./$(DEPDIR)/t_distr_cont.Po
	-rm -f ./$(DEPDIR)/t_distr_corder.Po
	-rm -f ./$(DEPDIR)/t_distr_cvec.Po
	-rm -f ./$(DEPDIR)/t_distr_cvemp.Po
	-rm -f ./$(DEPDIR)/t_distr_cxtrans.Po
	-rm -f ./$(DEPDIR)/t_distr_discr.Po
	-rm -f ./$(DEPDIR)/t_distr_matr.Po
	-rm -f ./$(DEPDIR)/t_dsrou.Po
	-rm -f ./$(DEPDIR)/t_dss.Po
	-rm -f ./$(DEPDIR)/t_dstd.Po
	-rm -f ./$(DEPDIR)/t_empk.Po
	-rm -f ./$(DEPDIR)/t_empl.Po
	-rm -f ./$(DEPDIR)/t_gibbs.Po
	-rm -f ./$(DEPDIR)/t_hinv.Po
	-rm -f ./$(DEPDIR)/t_hist.Po
	-rm -f ./$(DEPDIR)/t_hitro.Po
	-rm -f ./$(DEPDIR)/t_hrb.Po
	-rm -f ./$(DEPDIR)/t_hrd.Po
	-rm -f ./$(DEPDIR)/t_hri.Po
	-rm -f ./$(DEPDIR)/t_info.Po
	-rm -f ./$(DEPDIR)/t_itdr.Po
	-rm -f ./$(DEPDIR)/t_mcorr.Po
	-rm -f ./$(DEPDIR)/t_mixt.Po
	-rm -f ./$(DEPDIR)/t_mvstd.Po
	-rm -f ./$(DEPDIR)/t_mvtdr.Po
	-rm -f ./$(DEPDIR)/t_ninv.Po
	-rm -f ./$(DEPDIR)/t_norta.Po
	-rm -f ./$(DEPDIR)/t_nrou.Po
	-rm -f ./$(DEPDIR)/t_pinv.Po
	-rm -f ./$(DEPDIR)/t_srou.Po
	-rm -f ./$(DEPDIR)/t_ssr.Po
	-rm -f ./$(DEPDIR)/t_stringparser.Po
	-rm -f ./$(DEPDIR)/t_tabl.Po
	-rm -f ./$(DEPDIR)/t_tdr.Po
	-rm -f ./$(DEPDIR)/t_tdr_gw.Po
	-rm -f ./$(DEPDIR)/t_tdr_ia.Po
	-rm -f ./$(DEPDIR)/t_tdr_ps.Po
	-rm -f ./$(DEPDIR)/t_unif.Po
	-rm -f ./$(DEPDIR)/t_unur_error.Po
	-rm -f ./$(DEPDIR)/t_unur_tests.Po
	-rm -f ./$(DEPDIR)/t_urng.Po
	-rm -f ./$(DEPDIR)/t_utdr.Po
	-rm -f ./$(DEPDIR)/t_util_matrix.Po
	-rm -f ./$(DEPDIR)/t_vempk.Po
	-rm -f ./$(DEPDIR)/t_vnrou.Po
	-rm -f ./$(DEPDIR)/t_x_gen.Po
	-rm -f ./$(DEPDIR)/test_StdDistr.Po
	-rm -f ./$(DEPDIR)/test_functionparser.Po
	-rm -f ./$(DEPDIR)/testcounter.Plo
	-rm -f ./$(DEPDIR)/testroutines.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am:

.MAKE: $(am__recursive_targets) check-am install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


#test_StdDistr.o: t_StdDistr.data

#t_StdDistr.data: test_StdDistr.m
#	math -initfile $(top_srcdir)/tests/test_StdDistr.m

#test_functionparser.o: t_functionparser.data

#t_functionparser.data: test_functionparser.m
#	math -initfile $(top_srcdir)/tests/test_functionparser.m
.conf.c: make_test_files.pl
	./make_test_files.pl $(top_srcdir) $< > $@

t_*.c: make_test_files.pl

# run tests with valgrind
#valgrind: $(check_PROGRAMS)
#	@list='$(check_PROGRAMS)'; for p in $$list; do \
#		$(top_srcdir)/scripts/run_valgrind.sh ./$$p; \
#	done

# run tests in fullcheck mode
fullcheck:
	UNURANFULLCHECK=true make check

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
